{"version":3,"sources":["Components/Header.js","Components/LoadingAnimation.js","Components/Error.js","Components/Articles.js","Components/NoResults.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleScrollTop","window","scrollTo","top","current","offsetTop","handleSubmit","e","preventDefault","query","state","props","handleSearch","setState","placeholder","handleChange","target","value","React","createRef","this","ref","className","icon","faNewspaper","onSubmit","type","onChange","required","htmlFor","class","faSearch","aria-hidden","onClick","aria-label","faArrowUp","title","Component","LoadingAnimation","faSpinner","Error","faSurprise","href","Articles","imgSrc","url","date","rel","src","alt","faClock","slice","NoResults","faThumbsDown","Footer","faCode","App","apiCall","axios","responseType","paramsSerializer","params","Qs","stringify","arrayFormat","reqUrl","q","language","pageSize","apiKey","then","response","results","data","totalResults","filterArticleTitles","articles","filter","article","index","array","findIndex","secondIndex","isLoading","catch","apiLimit","onPageLoad","pageLoadCount","name","content","property","map","key","urlToImage","publishedAt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.1d80dc07.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { faNewspaper } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.top = React.createRef();\r\n\r\n    this.state = {\r\n      query: '',\r\n      placeholder: 'Miscellaneous',\r\n    }\r\n  }\r\n\r\n  handleScrollTop = () => {\r\n    window.scrollTo(0, this.top.current.offsetTop);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { query } = this.state;\r\n    this.props.handleSearch(query);\r\n\r\n    this.setState({\r\n      query: '',\r\n      placeholder: query,\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { placeholder, query } = this.state;\r\n    \r\n    return (\r\n      <header ref={this.top}>\r\n        <div className=\"wrapper\">\r\n          <h1><FontAwesomeIcon icon={faNewspaper}/>The Specific Press</h1>\r\n          <h2>Enter a Subject for the Latest News Headlines</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <h2>Showing results for: </h2>\r\n            <div className=\"search-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                value={query}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <label className=\"sr-only\" htmlFor=\"search\">Miscellaneous</label>\r\n            <button class=\"search-button\" onSubmit={this.handleSubmit}><FontAwesomeIcon icon={faSearch} aria-hidden=\"true\"/></button>\r\n            </div>\r\n          </form>\r\n          <button class=\"up-arrow\" onClick={this.handleScrollTop} aria-label=\"Back to the top\">\r\n            <FontAwesomeIcon icon={faArrowUp} aria-hidden=\"true\" title=\"Back to the top\"/>\r\n          </button>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst LoadingAnimation = () => {\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <FontAwesomeIcon icon={faSpinner} aria-hidden=\"true\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingAnimation\r\n","import React from 'react';\r\nimport { faSurprise } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"noResults-container\">\r\n      <FontAwesomeIcon icon={faSurprise}/>\r\n      <h3>Whoa! We can't retrieve news articles right now. Read them from the <a href=\"https://news.google.com/topstories?hl=en-CA&gl=CA&ceid=CA:en\">source</a> instead.</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'; \r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Articles = ({ imgSrc, url, title, date} ) => {\r\n    \r\n  // if there is no image, don't return the article\r\n  if (imgSrc === null) {\r\n    return (\r\n      null  \r\n    )\r\n  } else {\r\n      return (\r\n        <a className=\"image-container\" href={url} aria-label={`${title}, enter to read more.`} title=\"Read more\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={imgSrc} alt={title}/>\r\n          <h2>{title}</h2>\r\n          <p><FontAwesomeIcon icon={faClock} aria-hidden=\"true\"/>{date.slice(0, 10)}</p>\r\n        </a>\r\n    )\r\n  }  \r\n}\r\n\r\nexport default Articles\r\n","import React from 'react';\r\nimport { faThumbsDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst NoResults = () => {\r\n  return (\r\n    <div className=\"noResults-container\">\r\n      <FontAwesomeIcon icon={faThumbsDown} aria-hidden=\"true\"/>\r\n      <h3>That subject must not be newsworthy, try again.</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoResults\r\n","import React from 'react';\r\nimport { faCode } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"wrapper\">\r\n        <p>News articles courtesy of the <a className=\"api-link\" href=\"https://newsapi.org/\">News API</a></p>\r\n        <a href=\"https://github.com/seandaniel/the-specific-press\">\r\n          <FontAwesomeIcon icon={faCode} aria-hidden=\"true\" title=\"View source code via GitHub\"/>\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Qs from 'qs';\nimport './index.scss';\nimport MetaTags from 'react-meta-tags';\n\n//Components\nimport Header from './Components/Header'\nimport LoadingAnimation from './Components/LoadingAnimation';\nimport Error from './Components/Error';\nimport Articles from './Components/Articles';\nimport NoResults from './Components/NoResults'\nimport Footer from './Components/Footer'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      articles: [],\n      results: 1,\n      apiLimit: false,\n      query: '',\n      isLoading: true,\n      pageLoadCount: 1,\n    }\n  }\n\n  apiCall = (value='Miscellaneous') => {\n    axios({\n      url: 'https://proxy.hackeryou.com',\n      responseType: 'json',\n      paramsSerializer: function (params) {\n        return Qs.stringify(params, { arrayFormat: 'brackets' });\n      },\n      params: {\n        reqUrl: 'https://newsapi.org/v2/everything',\n        params: {\n          q: value,\n          language: 'en',\n          pageSize: 100,\n          apiKey: `eb43cb932e264320adfd1b7942970622`,\n        }\n      }\n    }).then((response) => {\n\n      let results = response.data.totalResults;\n      let articles = response.data.articles;\n\n      // filters out EXACT article titles\n      const filterArticleTitles = articles.filter((article, index, array) => {\n        return array.findIndex(secondIndex => (secondIndex.title === article.title)) === index\n      });\n\n      this.setState({\n        articles: filterArticleTitles,\n        results,\n        query: '',\n        isLoading: false\n      })\n    }).catch(() => {\n        this.setState({\n          isLoading: false,\n          apiLimit: true\n        })\n    })\n  }\n\n  onPageLoad = () => {\n    this.apiCall();\n\n    this.setState({\n      pageLoadCount: 2,\n    })\n  }\n\n  handleSearch = value => {\n    this.setState({\n      isLoading: true,\n      apiLimit: false\n    })\n\n    if (this.state.isLoading === false) {\n      this.apiCall(value);\n    }\n  }\n\n  // run onPageLoad only once\n  componentDidMount() {\n    if (this.state.pageLoadCount === 1) {\n      this.onPageLoad();\n    } \n  }\n\n  render() {\n    const { isLoading, apiLimit, results, articles } = this.state;\n    \n    return (\n      <> \n        <MetaTags>\n          <meta name=\"description\" content=\"A news generator app that receives a user’s input and retrieves curated articles relating to the subject searched.\" />\n          <meta property=\"og:title\" content=\"The Specific Press\" />\n          <meta property=\"og:image\" content=\"public/favicon.ico?\" />\n        </MetaTags>\n        <Header handleSearch={this.handleSearch} ref={this.top}/>\n        <div className=\"wrapper\">\n          <main>\n            {\n              isLoading ? <LoadingAnimation /> \n              : apiLimit === true ? <Error/>\n              : results > 0 ? articles.map((article, index) => {\n                return (\n                  <Articles\n                    key={index}\n                    url={article.url}\n                    imgSrc={article.urlToImage}\n                    title={article.title}\n                    date={article.publishedAt}\n                  />\n                  )\n                }) : <NoResults/>\n              }\n          </main>\n        </div>\n        <Footer/>\n      </>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}